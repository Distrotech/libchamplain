<?xml version="1.0"?>
<api>
  <!--

        This file was automatically generated.
        Please DO NOT MODIFY THIS FILE, modify .metadata files instead.

-->
  <namespace name="Champlain" library="champlain">
    <enum name="DebugFlags" cname="ChamplainDebugFlags" type="flags">
      <member cname="CHAMPLAIN_DEBUG_LOADING" name="Loading" value="1 &lt;&lt; 1" />
      <member cname="CHAMPLAIN_DEBUG_ENGINE" name="Engine" value="1 &lt;&lt; 2" />
      <member cname="CHAMPLAIN_DEBUG_VIEW" name="View" value="1 &lt;&lt; 3" />
      <member cname="CHAMPLAIN_DEBUG_OTHER" name="Other" value="1 &lt;&lt; 4" />
    </enum>
    <enum name="MapSource" cname="ChamplainMapSource" gtype="champlain_map_source_get_type" type="enum">
      <member cname="CHAMPLAIN_MAP_SOURCE_DEBUG" name="Debug" />
      <member cname="CHAMPLAIN_MAP_SOURCE_OPENSTREETMAP" name="Openstreetmap" />
      <member cname="CHAMPLAIN_MAP_SOURCE_OPENARIALMAP" name="Openarialmap" />
      <member cname="CHAMPLAIN_MAP_SOURCE_MAPSFORFREE_RELIEF" name="MapsforfreeRelief" />
      <member cname="CHAMPLAIN_MAP_SOURCE_COUNT" name="Count" />
    </enum>
    <enum name="ScrollMode" cname="ChamplainScrollMode" gtype="champlain_scroll_mode_get_type" type="enum">
      <member cname="CHAMPLAIN_SCROLL_MODE_PUSH" name="Push" />
      <member cname="CHAMPLAIN_SCROLL_MODE_KINETIC" name="Kinetic" />
    </enum>
    <enum name="StateEnum" cname="ChamplainStateEnum" type="enum">
      <member cname="CHAMPLAIN_STATE_NONE" name="None" />
      <member cname="CHAMPLAIN_STATE_INIT" name="Init" />
      <member cname="CHAMPLAIN_STATE_LOADING" name="Loading" />
      <member cname="CHAMPLAIN_STATE_DONE" name="Done" />
    </enum>
    <object name="Layer" cname="ChamplainLayer" parent="ClutterGroup">
      <method name="GetType" cname="champlain_layer_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <constructor cname="champlain_layer_new" />
    </object>
    <object name="Marker" cname="ChamplainMarker" parent="ClutterGroup">
      <field name="Priv" cname="priv" type="ChamplainMarkerPrivate*" />
      <property name="Longitude" cname="longitude" type="gdouble" readable="true" writeable="true" />
      <property name="Latitude" cname="latitude" type="gdouble" readable="true" writeable="true" />
      <method name="GetType" cname="champlain_marker_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <constructor cname="champlain_marker_new" />
      <constructor cname="champlain_marker_new_with_image">
        <parameters>
          <parameter type="const-gchar*" name="filename" />
          <parameter type="GError**" name="error" />
        </parameters>
      </constructor>
      <constructor cname="champlain_marker_new_with_image_full">
        <parameters>
          <parameter type="const-gchar*" name="filename" />
          <parameter type="gint" name="width" />
          <parameter type="gint" name="height" />
          <parameter type="gint" name="anchor_x" />
          <parameter type="gint" name="anchor_y" />
          <parameter type="GError**" name="error" />
        </parameters>
      </constructor>
      <constructor cname="champlain_marker_new_with_label">
        <parameters>
          <parameter type="const-gchar*" name="label" />
          <parameter type="const-gchar*" name="font" />
          <parameter type="ClutterColor*" name="text_color" />
          <parameter type="ClutterColor*" name="marker_color" />
        </parameters>
      </constructor>
      <method name="SetPosition" cname="champlain_marker_set_position">
        <return-type type="void" />
        <parameters>
          <parameter type="gdouble" name="longitude" />
          <parameter type="gdouble" name="latitude" />
        </parameters>
      </method>
    </object>
    <object name="Tile" cname="ChamplainTile" parent="GObject">
      <property name="X" cname="x" type="gint" readable="true" writeable="true" />
      <property name="Y" cname="y" type="gint" readable="true" writeable="true" />
      <property name="ZoomLevel" cname="zoom-level" type="gint" readable="true" writeable="true" />
      <property name="Size" cname="size" type="guint" readable="true" writeable="true" />
      <property name="State" cname="state" type="ChamplainStateEnum" readable="true" writeable="true" />
      <property name="Uri" cname="uri" type="gchar*" readable="true" writeable="true" />
      <property name="Filename" cname="filename" type="gchar*" readable="true" writeable="true" />
      <property name="Actor" cname="actor" type="ClutterActor" readable="true" writeable="true" />
      <method name="GetActor" cname="champlain_tile_get_actor">
        <return-type type="ClutterActor*" />
      </method>
      <method name="GetFilename" cname="champlain_tile_get_filename">
        <return-type type="gchar*" />
      </method>
      <method name="GetSize" cname="champlain_tile_get_size">
        <return-type type="guint" />
      </method>
      <method name="GetState" cname="champlain_tile_get_state">
        <return-type type="ChamplainStateEnum" />
      </method>
      <method name="GetType" cname="champlain_tile_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="GetUri" cname="champlain_tile_get_uri">
        <return-type type="gchar*" />
      </method>
      <method name="GetX" cname="champlain_tile_get_x">
        <return-type type="gint" />
      </method>
      <method name="GetY" cname="champlain_tile_get_y">
        <return-type type="gint" />
      </method>
      <method name="GetZoomLevel" cname="champlain_tile_get_zoom_level">
        <return-type type="gint" />
      </method>
      <constructor cname="champlain_tile_new" />
      <constructor cname="champlain_tile_new_full">
        <parameters>
          <parameter type="gint" name="x" />
          <parameter type="gint" name="y" />
          <parameter type="guint" name="size" />
          <parameter type="gint" name="zoom_level" />
        </parameters>
      </constructor>
      <method name="SetActor" cname="champlain_tile_set_actor">
        <return-type type="void" />
        <parameters>
          <parameter type="ClutterActor*" name="actor" />
        </parameters>
      </method>
      <method name="SetFilename" cname="champlain_tile_set_filename">
        <return-type type="void" />
        <parameters>
          <parameter type="gchar*" name="filename" />
        </parameters>
      </method>
      <method name="SetSize" cname="champlain_tile_set_size">
        <return-type type="void" />
        <parameters>
          <parameter type="guint" name="size" />
        </parameters>
      </method>
      <method name="SetState" cname="champlain_tile_set_state">
        <return-type type="void" />
        <parameters>
          <parameter type="ChamplainStateEnum" name="state" />
        </parameters>
      </method>
      <method name="SetUri" cname="champlain_tile_set_uri">
        <return-type type="void" />
        <parameters>
          <parameter type="gchar*" name="uri" />
        </parameters>
      </method>
      <method name="SetX" cname="champlain_tile_set_x">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="x" />
        </parameters>
      </method>
      <method name="SetY" cname="champlain_tile_set_y">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="y" />
        </parameters>
      </method>
      <method name="SetZoomLevel" cname="champlain_tile_set_zoom_level">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="zoom_level" />
        </parameters>
      </method>
    </object>
    <object name="View" cname="ChamplainView" parent="ClutterGroup">
      <field name="Priv" cname="priv" type="ChamplainViewPrivate*" />
      <property name="Longitude" cname="longitude" type="gfloat" readable="true" writeable="true" />
      <property name="Latitude" cname="latitude" type="gfloat" readable="true" writeable="true" />
      <property name="ZoomLevel" cname="zoom-level" type="gint" readable="true" writeable="true" />
      <property name="MapSource" cname="map-source" type="gint" readable="true" writeable="true" />
      <property name="Offline" cname="offline" type="gboolean" readable="true" writeable="true" />
      <property name="ScrollMode" cname="scroll-mode" type="ChamplainScrollMode" readable="true" writeable="true" />
      <property name="DecelRate" cname="decel-rate" type="gdouble" readable="true" writeable="true" />
      <property name="KeepCenterOnResize" cname="keep-center-on-resize" type="gboolean" readable="true" writeable="true" />
      <property name="ShowLicense" cname="show-license" type="gboolean" readable="true" writeable="true" />
      <method name="AddLayer" cname="champlain_view_add_layer">
        <return-type type="void" />
        <parameters>
          <parameter type="ClutterActor*" name="layer" />
        </parameters>
      </method>
      <method name="CenterOn" cname="champlain_view_center_on">
        <return-type type="void" />
        <parameters>
          <parameter type="gdouble" name="latitude" />
          <parameter type="gdouble" name="longitude" />
        </parameters>
      </method>
      <method name="GetCoordsFromEvent" cname="champlain_view_get_coords_from_event">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="ClutterEvent*" name="event" />
          <parameter type="gdouble*" name="lat" />
          <parameter type="gdouble*" name="lon" />
        </parameters>
      </method>
      <method name="GetType" cname="champlain_view_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <constructor cname="champlain_view_new" />
      <method name="SetSize" cname="champlain_view_set_size">
        <return-type type="void" />
        <parameters>
          <parameter type="guint" name="width" />
          <parameter type="guint" name="height" />
        </parameters>
      </method>
      <method name="ZoomIn" cname="champlain_view_zoom_in">
        <return-type type="void" />
      </method>
      <method name="ZoomOut" cname="champlain_view_zoom_out">
        <return-type type="void" />
      </method>
    </object>
    <struct name="ZoomLevel" cname="ZoomLevel" opaque="true">
      <field name="Level" cname="level" type="int" access="public" writeable="true" />
      <field name="RowCount" cname="row_count" type="int" access="public" writeable="true" />
      <field name="ColumnCount" cname="column_count" type="int" access="public" writeable="true" />
      <field name="TileSize" cname="tile_size" type="int" access="public" writeable="true" />
      <field name="Tiles" cname="tiles" type="GPtrArray*" access="public" writeable="true" />
      <field name="Group" cname="group" type="ClutterActor*" access="public" writeable="true" />
      <field name="Anchor" cname="anchor" type="ChamplainPoint" access="public" writeable="true" />
      <method name="Free" cname="zoom_level_free">
        <return-type type="void" />
      </method>
      <method name="GetHeight" cname="zoom_level_get_height">
        <return-type type="guint" />
      </method>
      <method name="GetWidth" cname="zoom_level_get_width">
        <return-type type="guint" />
      </method>
      <constructor cname="zoom_level_new">
        <parameters>
          <parameter type="gint" name="zoom_level" />
          <parameter type="gint" name="row" />
          <parameter type="gint" name="column" />
          <parameter type="gint" name="tile_size" />
        </parameters>
      </constructor>
    </struct>
    <class name="Debug" cname="ChamplainDebug_">
      <method name="FlagIsSet" cname="champlain_debug_flag_is_set" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="ChamplainDebugFlags" name="flag" />
        </parameters>
      </method>
      <method name="SetFlags" cname="champlain_debug_set_flags" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="flags_string" />
        </parameters>
      </method>
    </class>
  </namespace>
</api>